project: test08-30
name: explore 08
description: explore bigger datasets smaller lr
program: train
method: random
metric:
    goal: minimize
    name: train_loss
parameters:


    # # reproducability
    # seed:
    #     value: 33

    # # model
    # model_name:
    #     value: RecurrenceModel
    hidden_units_list:
        values: 
        - [3,8,3]
        - [3,10,3]
        - [3,12,3]
        - [3,16,3]
        - [3,20,3]
        - [3,24,3]
        - [3,36,3]
        - [3,48,3]
    activation_function:
        value: leaky_relu
        # distribution: categorical
        # values:
        # - elu
        # - selu
        # - relu
        # - leaky_relu

    # # train regime
    # optimizer:
    #     value: Adam
    # loss_func:
    #     value: RMSE
    learning_rate: 
        # distribution: uniform
        # min: 0.001  # 0.0227
        # max: 0.1  # 0.0235
        distribution: uniform
        min: 0.001  # 0.0227
        max: 0.05  # 0.0235
    weight_decay:
        value: 0.006251
        # distribution: uniform
        # min: 0.0
        # max: 0.1
    batch_size:
        # value: 64
        values: [32, 64]
        # probabilities: [0.5, 0.5]
    epochs:
        distribution: int_uniform
        min: 2
        max: 5
    dataset_size:
        # distribution: q_uniform
        # min: 6000
        # max: 15000
        # q: 1000
        distribution: q_uniform
        min: 10000
        max: 30000
        q: 1000

    # # train data
    # num_samples:
    #     value: 20**3  # 30**3 better than 40**3
    # dataset:  # TODO improve definition of dataset
    #     value: np.random.normal([x:0,30, y:0,30, z:25,25], num_samples)
    # map_name:
    #     value: lorentz_ode
    # parameters:
    #     value: {'sigma': 10, 'beta': 8/3, 'rho': 28, 'dt': 0.01}
    
    # # device
    # device:
    #     value: mps
    # dtype:
    #     value: float32
    # # num_workers:
    # #     value: 4
    # gpu_name:
    #     value: M1Pro GPU 16 Cores
